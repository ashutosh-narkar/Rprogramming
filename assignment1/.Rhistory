clear
x <- factor(c('yes', 'no'))
x
table(x)
unclass(x)
getwd()
x <- matrix(1:6, 2,3)
x
x <- list(1,2,3,NA)
y <- list(4,NA,3,NA)
good <- complete.cases(x,y)
good
x <- c(1,2,3,NA)
y <- c(4,NA,3,NA)
good <- complete.cases(x,y)
good
x[good]
y[good]
data <- read.table(test.txt)
data <- read.table("test.txt")
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <-  5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) +  c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(1,10, by=0.5)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
my_seq = seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep c(0, 1, 2), each = 10)
rep(c(0, 1, 2), each = 10))
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 1
num_vect >= 6
my_char <- c('My', 'name', 'is')
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, 'ash')
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c, sep = " ")
paste(1:3, c('X', 'Y', 'Z'), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf / Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x
[x > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,
| -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect
vect['bar']
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
?cbind
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
my_data <- colnames(cnames)
colnames(my_data) <- cname
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
ls_list <- lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals = lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
?summary
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$landmass, flags$animate, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrpw(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
?head
head(plants, n=10L)
head(plants, n=10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips = sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, n= 100, size=1 prob = 0.7)
flips2 <- rbinom(1, n= 100, size=1, prob = 0.7)
flips2 <- rbinom(n= 100, size=1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois = replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm = colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?gl
?read
?read
?read.csv
file.path("usr", "local", "lib")
?file.path
x <- c('a')
x[1]
?paste
paste("0", x[1], sep = "")
paste("00", x[1], sep = "")
?formatC
paste("", formatC(x[1], width=3, flag="0"), sep="")
paste("0", formatC(x[1], width=3, flag="0"), sep="")
paste("0", formatC(x, width=3, flag="0"), sep="")
paste("0", formatC(x[1], width=3, flag="0"))
paste("0", formatC(x, width=3, flag="0"), sep="")
paste("00", formatC(x, width=3, flag="0"), sep="")
formatC(x, width=3, flag="0")
paste("", formatC(x, width=3, flag="0"), sep="")
formatC(x, width=3, flag="0")
formatC(x, width=3, format="s", flag="0")
formatC(x, width=3, flag="0")
sprintf("%04d", 1)
sprintf("%03d", 1)
sprintf("%03d", 10)
sprintf("%03d", 100)
y <- sprintf("%03d", x)
y <- sprintf("%03d", x[1])
y <- sprintf("%03s", x[1])
y
y <- sprintf("%03s", 1)
y
formatC(1, width=3, format="d", flag="0")
formatC(10, width=3, format="d", flag="0")
formatC(100, width=3, format="d", flag="0")
y <- formatC(10, width=3, format="d", flag="0")
class(y)
y <- sprintf("%03s", 1)
y
y <- sprintf("%03d", 1)
y
?formatC
x <- c(1,2,3)
y <- formatC(x[1], width=3, format="d", flag="0")
y
setwd('/home/anarkar/cousera/rprogramming/assignment1')
getwd()
setwd('/home/anarkar/cousera/rprogramming/assignment1')
setwd('/home/anarkar/coursera/rprogramming/assignment1')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
pollutantmean('specdata', 'sulfate')
pollutantmean('specdata', 'sulfate')
formatC(1, width=3, format="d", flag="0")
formatC(1, '.csv', width=3, format="d", flag="0")
sprintf("%03d.csv", 1)
pollutantmean('specdata', 'sulfate')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate')
source('pollutantmean.R')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:2)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:2)
pollutantmean('specdata', 'sulfate', 23)
pollutantmean('specdata', 'nitrate', 23)
pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
source('pollutantmean.R')
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'nitrate', 23)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'sulphate', 1:10)
pollutantmean('specdata', 'sulfate', 1:10)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
x <- pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'sulfate', 1:10)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
submit()
source('submitscript1.R')
submit()
